version: "3.7"

networks:
    backend:
        driver: bridge
    frontend:
        driver: bridge

volumes:
    mysql:
        driver: local
    redis:
        driver: local

services:
    app:
        build:
            context: ./app
            dockerfile: Dockerfile
            args:
                - PHP_VERSION=${PHP_VERSION}
        image: rachman/app
        environment:
            - ENV=development
            - TZ=${TIMEZONE}
        volumes:
            - ./cron/config/crontab:/etc/crontabs/cron:ro
            - ./cron/logs:/var/log/cron
            - ./php/config/php.ini:/usr/local/etc/php/conf.d/zz-php.ini:ro
            - ./php/config/php-fpm.conf:/usr/local/etc/php-fpm.d/zz-php-fpm.conf:ro
            - ./php/logs:/var/log/php
            - ./supervisor/config:/etc/supervisor.d:ro
            - ./supervisor/logs:/var/log/supervisor
            - ${WORKDIR}:/srv/www
        ports:
            - ${PHP_PORT}:9000
        networks:
            - backend
            - frontend
        restart: unless-stopped

    caddy:
        build:
            context: ./caddy
            dockerfile: Dockerfile
        image: rachman/caddy
        environment:
            - ENV=development
            - TZ=${TIMEZONE}
            - EMAIL=${CADDY_CERT_EMAIL}
        volumes:
            - ./caddy/config:/etc/caddy/conf.d:ro
            - ./caddy/logs:/var/log
            - ${WORKDIR}:/srv/www
        ports:
            - ${CADDY_HTTP_PORT}:80
            - ${CADDY_HTTPS_PORT}:443
        networks:
            - frontend
        restart: unless-stopped

    mysql:
        build:
            context: ./mysql
            dockerfile: Dockerfile
        image: rachman/mysql
        environment:
            - TZ=${TIMEZONE}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        volumes:
            - mysql:/var/lib/mysql
            - ./mysql/config:/etc/my.cnf.d:ro
            - ./mysql/logs:/var/log
        ports:
            - ${MYSQL_PORT}:3306
        networks:
            - backend
        restart: unless-stopped

    redis:
        build:
            context: ./redis
            dockerfile: Dockerfile
        image: rachman/redis
        environment:
            - TZ=${TIMEZONE}
        volumes:
            - redis:/data
            - ./redis/config/redis.conf:/etc/conf.d/redis.conf:ro
            - ./redis/logs:/var/log
        ports:
            - ${REDIS_PORT}:6379
        networks:
            - backend
        sysctls:
            - net.core.somaxconn=511
        restart: unless-stopped

    memcached:
        build:
            context: ./memcached
            dockerfile: Dockerfile
        image: rachman/memcached
        environment:
            - TZ=${TIMEZONE}
        ports:
            - ${MEMCACHED_PORT}:11211
        networks:
            - backend
        restart: unless-stopped
    